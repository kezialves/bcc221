package Telas;

import java.util.NoSuchElementException;

import javax.swing.JOptionPane;
import DAO.DAOAutor;
import Modelo.Autor;

public class FormAutor extends javax.swing.JFrame {

    //1 - Adm
    //2 - Funcionario
    //3 - Usuario
    
    int tipoFuncionario;

    /**
     * Creates new form FormAutor
     */
    public FormAutor() {
        initComponents();
    }

    public FormAutor(int tipoFuncionario) {
        initComponents();
        this.tipoFuncionario = tipoFuncionario;

        if(tipoFuncionario == 2){
            this.btnAdicionar.setEnabled(false);
            this.btnRemover.setEnabled(false);
            this.btnAtualizar.setEnabled(false);
        }
    }

    DAOAutor daoAutor = new DAOAutor();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSobrenome = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBiografia = new javax.swing.JTextArea();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 400));

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdicionar);

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemover);

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAtualizar);

        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });
        jPanel2.add(btnLocalizar);

        jLabel1.setText("ID:");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome:");

        jLabel3.setText("Sobrenome:");

        jLabel4.setText("Biografia:");

        txtBiografia.setColumns(20);
        txtBiografia.setRows(5);
        jScrollPane1.setViewportView(txtBiografia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        
        String idString = txtID.getText();
        String nomeString = txtNome.getText();
        String sobrenomeString = txtSobrenome.getText();
        String biografiaString = txtBiografia.getText();
        
        int id = 0;
        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }

        // Remove o autor

        Autor autor = new Autor(id, nomeString, sobrenomeString, biografiaString);
        
        try {
            daoAutor.remover(autor);
        }
        catch(IllegalArgumentException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        catch(NoSuchElementException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage() + " Tente novamente.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }

        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtBiografia.setText("");
        
        JOptionPane.showMessageDialog(null, "Autor removido!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
       
        String idString = txtID.getText();
        String nomeString = txtNome.getText();
        String sobrenomeString = txtSobrenome.getText();
        String biografiaString = txtBiografia.getText();
        
        int id = 0;
        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);
        // txtNome.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }

        // Nome inválido
        try {
            if(nomeString.isEmpty()) {
                throw new IllegalArgumentException("Nome inválido! O nome do autor não pode ser vazio.");
            }
        }
        catch(IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtNome.requestFocus();
            // txtNome.setBackground(vermelho);
            return;
        }

        // Adiciona o autor

        Autor autor = new Autor(id, nomeString, sobrenomeString, biografiaString);
        
        try {
            daoAutor.incluir(autor);
        }
        catch(IllegalArgumentException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage() + " Tente novamente.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }

        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtBiografia.setText("");

        JOptionPane.showMessageDialog(null, "Autor incluído!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TOD add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed

        String idString = txtID.getText();
        
        int id = 0;
        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }
        
        // Localiza o autor
        Autor autor;
        
        try {
            autor = (Autor) daoAutor.localizar(id);
        }
        catch(NoSuchElementException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage() + " Tente novamente.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtBiografia.setText("");
        
        JOptionPane.showMessageDialog(null, "ID: " + autor.getId() + "\nNome: " + autor.getNome() + " " + autor.getSobrenome() + "\nBio: " + autor.getBiografia(), "Autor encontrado!", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed

        String idString = txtID.getText();
        String nomeString = txtNome.getText();
        String sobrenomeString = txtSobrenome.getText();
        String biografiaString = txtBiografia.getText();
        
        int id = 0;
        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);
        // txtNome.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }

        // Nome inválido
        Autor autor = new Autor(id, nomeString, sobrenomeString, biografiaString);

        try{
            daoAutor.atualizar(autor);

        }
        catch (IllegalArgumentException exception){
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        catch (NoSuchElementException exception){
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }

        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtBiografia.setText("");

        JOptionPane.showMessageDialog(null, "Autor atualizado!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnAtualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                FormAutor tela;
                tela = new FormAutor();    
                tela.setLocationRelativeTo(null);
                tela.setTitle("Autor");
                tela.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtBiografia;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtSobrenome;
    // End of variables declaration//GEN-END:variables
}

