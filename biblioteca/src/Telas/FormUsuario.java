package Telas;

import java.util.NoSuchElementException;

import javax.swing.JOptionPane;

import DAO.DAOUsuario;
import Modelo.Usuario;

public class FormUsuario extends javax.swing.JFrame {

    int tipoFuncionario;

    DAOUsuario daoUsuario = new DAOUsuario();

    /**
     * Creates new form FormUsuario
     */
    public FormUsuario() {
        initComponents();
    }

    public FormUsuario(int tipoFuncionario) {
        initComponents();
    
        if(tipoFuncionario == 2){
            btnAdicionar.setEnabled(false);
            btnRemover.setEnabled(false);
            btnAtualizar.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSobrenome = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtRegistroAcademico = new javax.swing.JTextField();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 400));

        jLabel1.setText("ID:");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome:");

        jLabel3.setText("Sobrenome:");

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdicionar);

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemover);

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAtualizar);

        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });
        jPanel2.add(btnLocalizar);

        jLabel5.setText("R.A.:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtRegistroAcademico))
                        .addGap(182, 182, 182)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRegistroAcademico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        
        String idString = txtID.getText();
        String nomeString = txtNome.getText();
        String sobrenomeString = txtSobrenome.getText();
        
        int id = 0,
            registroAcademico = 0;

        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }

        // Remove o usuario
        Usuario usuario = new Usuario(id, nomeString, sobrenomeString, registroAcademico);
        
        try {
            daoUsuario.remover(usuario);
        }
        catch(IllegalArgumentException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        catch(NoSuchElementException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage() + " Tente novamente.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }

        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtRegistroAcademico.setText("");
        
        JOptionPane.showMessageDialog(null, "Usuário removido!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        
        String idString = txtID.getText();
        String nomeString = txtNome.getText();
        String sobrenomeString = txtSobrenome.getText();
        String raString = txtRegistroAcademico.getText(); 
        
        int id = 0,
            idRA = 0;

        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);
        // txtNome.setBackground(nulo);
        // txtRegistroAcademico.setBackground(nulo);
        // txtRegistroAcademico.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }

        // Nome inválido
        try {
            if(nomeString.isEmpty()) {
                throw new IllegalArgumentException("Nome inválido! O nome do usuário não pode ser vazio.");
            }
        }
        catch(IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtNome.requestFocus();
            // txtNome.setBackground(vermelho);
            return;
        }

        try {
            idRA = Integer.parseInt(raString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "R.A. inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtRegistroAcademico.requestFocus();
            // txtRegistroAcademico.setBackground(vermelho);
            return;
        }

        // Adiciona o usuario

        Usuario usuario = new Usuario(id, nomeString, sobrenomeString, idRA);
        
        try {
            daoUsuario.incluir(usuario);
        }
        catch(IllegalArgumentException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage() + " Tente novamente.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }

        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtRegistroAcademico.setText("");

        JOptionPane.showMessageDialog(null, "Usuário incluído!", "Sucesso!", JOptionPane.PLAIN_MESSAGE); 
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        
        String idString = txtID.getText();
        
        int id = 0;
        
        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }
        
        // Localiza o usuário
        Usuario usuario;
        
        try {
            usuario = (Usuario) daoUsuario.localizar(id);
        }
        catch(NoSuchElementException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage() + " Tente novamente.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtRegistroAcademico.setText("");
        
        JOptionPane.showMessageDialog(null, "ID: " + usuario.getId() + "\nNome: " + usuario.getNome() + " " + usuario.getSobrenome() + "\nR.A.: " + usuario.getRegistroAcademico(), "usuario encontrado!", JOptionPane.PLAIN_MESSAGE);
    
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        
        String idString = txtID.getText();
        String nomeString = txtNome.getText();
        String sobrenomeString = txtSobrenome.getText();
        String raString = txtRegistroAcademico.getText();
        
        int id = 0,
            registroAcademico = 0;

        // Color vermelho = new Color(255, 0, 0, 40);
        // Color nulo = new Color(255, 255, 255, 255);

        // txtID.setBackground(nulo);
        // txtNome.setBackground(nulo);

        // ID inválido
        try {
            id = Integer.parseInt(idString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtID.requestFocus();
            // txtID.setBackground(vermelho);
            return;
        }

        // Nome inválido
        try {
            if(nomeString.isEmpty()) {
                throw new IllegalArgumentException("Nome inválido! O nome do usuario não pode ser vazio.");
            }
        }
        catch(IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtNome.requestFocus();
            // txtNome.setBackground(vermelho);
            return;
        }

        try {
            registroAcademico = Integer.parseInt(raString);
        }
        catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "R.A. inválido! Utilize apenas números.", "Erro!", JOptionPane.PLAIN_MESSAGE);
            txtRegistroAcademico.requestFocus();
            // txtRegistroAcademico.setBackground(vermelho);
            return;
        }

        Usuario usuario = new Usuario(id, nomeString, sobrenomeString, registroAcademico);

        try{
            daoUsuario.atualizar(usuario);

        }
        catch (IllegalArgumentException exception){
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        catch (NoSuchElementException exception){
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Erro!", JOptionPane.PLAIN_MESSAGE);
            return;
        }

        txtID.setText("");
        txtNome.setText("");
        txtSobrenome.setText("");
        txtRegistroAcademico.setText("");

        JOptionPane.showMessageDialog(null, "Usuário atualizado!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnAtualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormUsuario tela;
                tela = new FormUsuario();    
                tela.setLocationRelativeTo(null);
                tela.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRegistroAcademico;
    private javax.swing.JTextField txtSobrenome;
    // End of variables declaration//GEN-END:variables
}